<header id="pageHeader">{{title}}</header>
<main id="mainArticle">
<top id="topMain" class="inner-grid">
	<h2>CODEC Settings</h2>
</top>
<left id="leftMain" class="inner-grid">
	<h3>Left Mini DIN-6 <img src="/images/mini-din-6-socket.svg" /></h3>
	<div class="control">Digital Volume to TX</div>
	<div class="control">
		{{>logain selectid='left-lodigvol'}}
	</div>
	<div class="control">Analog Volume to TX</div>
	<div class="control">
		{{>pcmselect selectid='left-pcmvol'}}
	</div>
	<div class="control">Analog from the RX</div>
	<div class="control">
		{{>adcselect selectid='left-adcvol'}}
	</div>
</left>
<right id="rightMain" class="inner-grid">
	<h3>Right Mini DIN-6 <img src="/images/mini-din-6-socket.svg" /></h3>
	<div class="control">Digital Volume to TX</div>
	<div class="control">
		{{>logain selectid='right-lodigvol'}}
	</div>
	<div class="control">Analog Volume to TX</div>
	<div class="control">
		{{>pcmselect selectid='right-pcmvol'}}
	</div>
	<div class="control">Analog from the RX</div>
	<div class="control">
		{{>adcselect selectid='right-adcvol'}}
	</div>
<common id="commonMain">
	<h3>Shared Controls</h3>
</common>
</main>
<nav id="mainNav">Navigation</nav>
<div id="siteAds">
</div>
<footer id="pageFooter">
	<span id="product">{{stats.hat.product}}</span> <br/>
	<span id="model">{{stats.model}}</span> |
	CPU Temp: <span id="cputemp">{{stats.cputemp.f}} &deg; F ({{stats.cputemp.c}} &deg; C)</span> /
	Uptime: <span id="uptime">(Collecting)</span> /
	Load AVG: <span id="loadavg">(Collecting)</span>
</footer>
<script>
{{JSONstringify controls}}
function setElement(id,str) {
	var ele = document.getElementById(id);
	ele.innerHTML = str;
}

(function () {
	var socket = io();
	socket.on('systemstats', function(data) {

		if (data.model) setElement("model",data.model);
		if (data.hat.product) {
			let prodtitle = "Vendor: " + data.hat.vendor + ", Product ID: " + data.hat.product_id + ", Version: " + data.hat.product_ver;
			let productID = document.getElementById("product");
			productID.setAttribute("title",prodtitle);
			setElement("product",data.hat.product);
		}
		if (data.cputemp) {
			var cput = "";
			cput += data.cputemp.f + "&deg; F (" + data.cputemp.c + "&deg; C)";
			setElement("cputemp",cput);
		}
		if (data.uptime) {
			var upstr = "";
			if (data.uptime.days > 0) upstr += " " + data.uptime.days + " days";
			var hms = data.uptime.hms.split(":");
			if (parseInt(hms[0]) > 0) upstr += " " + hms[0] + " hrs";
			upstr += " " + hms[1] + " mins";
			setElement("uptime",upstr);
		}
		if (data.loadavg) {
			var la = " 1m:" + data.loadavg.one + " 5m:" + data.loadavg.five + " 15m:" + data.loadavg.fifteen;
			setElement("loadavg", la);
		}
		console.log(data.controls);
		console.log(data.mixer);
	});
})();
</script>
